FROM php:8.2-apache

ENV APACHE_DOCUMENT_ROOT /var/www/html/www

RUN apt-get update && apt-get install -y curl gnupg git wget
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
RUN apt-get update \
    && apt-get install -y nodejs yarn libcurl4-openssl-dev libxslt-dev graphviz zip g++ libpcre3-dev libgd-dev build-essential unzip gcc make autoconf libc-dev pkg-config libssl-dev redis-tools libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libpng-dev zlib1g-dev libicu-dev libzip-dev libc-client-dev libkrb5-dev libonig-dev psmisc \
    && apt-get clean \
    && docker-php-ext-install -j$(nproc) intl \
    && docker-php-ext-install -j$(nproc) pdo_mysql \
    && docker-php-ext-install -j$(nproc) bcmath \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) gd \
    && docker-php-ext-install -j$(nproc) soap \
    && docker-php-ext-install -j$(nproc) pcntl \
    && docker-php-ext-install -j$(nproc) calendar \
    && docker-php-ext-install -j$(nproc) zip \
    && docker-php-ext-install -j$(nproc) xsl \
    && docker-php-ext-install -j$(nproc) gettext \
    && docker-php-ext-install -j$(nproc) opcache \
    && pecl install mcrypt \
    && docker-php-ext-enable mcrypt
RUN echo "memory_limit = -1;" > $PHP_INI_DIR/conf.d/memory_limit.ini
RUN echo "file_uploads = On \n\
memory_limit = 1000M \n\
upload_max_filesize = 60M \n\
post_max_size = 500M \n\
max_execution_time = 6000" > $PHP_INI_DIR/conf.d/upload.ini

RUN echo "[Date]\n\
date.timezone = Europe/Prague" > $PHP_INI_DIR/conf.d/timezone.ini

ENV COMPOSER_ALLOW_SUPERUSER=1

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

RUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf
RUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf

RUN a2enmod rewrite && a2ensite default-ssl && a2enmod ssl
RUN openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/ssl-cert-snakeoil.key -out /etc/ssl/certs/ssl-cert-snakeoil.pem -subj "/C=AT/ST=Prague/L=Prague/O=Security/OU=Development/CN=example.com"

COPY . /var/www/html

ENTRYPOINT ["./.docker/entrypoint.sh"]

EXPOSE 443
